image: golang:1.11-stretch

variables:
  TARGET_SYSTEM: ${BUILD_TARGET_SYSTEM}
  TARGET_ARCH: ${BUILD_TARGET_ARCH}
  S3_PATH: ${S3_PATH}

cache:
  paths:
    - /apt-cache
    - /go/src/github.com
    - /go/src/golang.org
    - /go/src/google.golang.org
    - /go/src/gopkg.in
    - vendor/

stages:
  - test
  - build
  - distribute

# ▼ templates ==========================================================================================================

# environments (dev/staging/prod) --------------------------------------------------------------------------------------
.env_dev_template: &env_dev_template
  variables:
    AWS_DEFAULT_REGION: $DEV_AWS_DEFAULT_REGION
    AWS_ACCESS_KEY_ID: $DEV_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $DEV_AWS_SECRET_ACCESS_KEY
    S3_BUCKET: $DEV_S3_BUCKET

.env_staging_template: &env_staging_template
  variables:
    AWS_DEFAULT_REGION: $STAGING_AWS_DEFAULT_REGION
    AWS_ACCESS_KEY_ID: $STAGING_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $STAGING_AWS_SECRET_ACCESS_KEY
    S3_BUCKET: $STAGING_S3_BUCKET

.env_prod_template: &env_prod_template
  variables:
    AWS_DEFAULT_REGION: $PROD_AWS_DEFAULT_REGION
    AWS_ACCESS_KEY_ID: $PROD_AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $PROD_AWS_SECRET_ACCESS_KEY
    S3_BUCKET: $PROD_S3_BUCKET

# distributions --------------------------------------------------------------------------------------------------------
.tpl_dist: &tpl_dist
  stage: distribute
    tags:
      - docker
    image: garland/aws-cli-docker
    cache: {}
    dependencies:
      - build
    #    only:
    #      - tags
    script:
      #    - aws s3 cp *.zip s3://${S3_BUCKET}/${S3_PATH}/${CI_COMMIT_REF_SLUG}.zip
      - for CMD in `ls cmd`; do aws s3 cp ${CMD}.zip s3://${S3_BUCKET}/${S3_PATH}/${CI_COMMIT_REF_SLUG}/${CMD}.zip; done

.dist_tag_template: &dist_tag_template
  <<: *tpl_dist
  only:
    - tags

.dist_branch_template: &dist_branch_template
  <<: *tpl_dist
  only:
    - branches

# go before script -----------------------------------------------------------------------------------------------------
.tpl_go_before_script: &tpl_go_before_script
  before_script:
    - apt-get update && apt-get install -y zip
    - go get -u github.com/golang/dep/cmd/dep
    - mkdir -p $GOPATH/src
    - cd $GOPATH/src
    - ln -s $CI_PROJECT_DIR
    - cd $CI_PROJECT_NAME
    - dep ensure

# ▲ templates ==========================================================================================================

# ▼ jobs ===============================================================================================================
test:
  <<: *tpl_go_before_script
  stage: test
  script:
    #    - go test
    - echo "no tests today"

build:
  <<: *tpl_go_before_script
  stage: build
  script:
    - GOOS=${TARGET_SYSTEM} GOARCH=${TARGET_ARCH}
    - for CMD in `ls cmd`; do go build ./cmd/$CMD; done
    - for CMD in `ls cmd`; do zip $CMD.zip $CMD; done

dist:tag:dev:
  <<: *dist_tag_template
  <<: *env_dev_template

dist:tag:staging:
  <<: *dist_tag_template
  <<: *env_staging_template

dist:tag:prod:
  <<: *dist_tag_template
  <<: *env_prod_template

# branch distribution only on DEV for development
dist:branch:dev:
  <<: *dist_branch_template
  <<: *env_dev_template

# ▲ jobs ===============================================================================================================